[{"D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\index.tsx":"1","D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\App.tsx":"2","D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\Controls\\Controls.tsx":"3","D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\Entries\\Entries.tsx":"4","D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\Pagination\\Pagination.tsx":"5","D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\Info\\Info.tsx":"6","D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\Utils\\handlePathname.ts":"7"},{"size":312,"mtime":1608401678069,"results":"8","hashOfConfig":"9"},{"size":10311,"mtime":1608842054055,"results":"10","hashOfConfig":"9"},{"size":3352,"mtime":1608841246798,"results":"11","hashOfConfig":"9"},{"size":2323,"mtime":1608841104805,"results":"12","hashOfConfig":"9"},{"size":2368,"mtime":1608841939557,"results":"13","hashOfConfig":"9"},{"size":1099,"mtime":1608841232336,"results":"14","hashOfConfig":"9"},{"size":348,"mtime":1608415795180,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"krsnxr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\index.tsx",[],["32","33"],"D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\App.tsx",["34","35"],"D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\Controls\\Controls.tsx",[],"D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\Entries\\Entries.tsx",["36"],"import React from 'react';\r\nimport './Entries.css';\r\n\r\ninterface ObjectProps {\r\n    entries: any[],\r\n    pagination: {\r\n        start: number,\r\n        end: number\r\n    },\r\n    onDelete(id: number): void,\r\n    onChecked(id: number): void,\r\n}\r\n\r\nconst Entries: React.FunctionComponent <ObjectProps> = (props) => {\r\n    const { entries, pagination, onDelete, onChecked } = props;\r\n\r\n\r\n    const handleDelete = (e: React.MouseEvent) => {\r\n        const target = e.target as HTMLButtonElement;\r\n        const id: number = Number(target.dataset.int);\r\n\r\n        onDelete(id);\r\n    }\r\n\r\n\r\n    const handleChecked = (e: React.MouseEvent) => {\r\n        const target = e.target as HTMLButtonElement;\r\n        const id: number = Number(target.dataset.int);\r\n        \r\n        onChecked(id);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list\">\r\n            {entries.map(({id, content, checked}, i) => {\r\n\r\n                if (i >= pagination.start && i < pagination.end) {\r\n                    return (\r\n                        <li className={`item list__item ${checked ? 'item_checked' : ''}`} key={id}>\r\n                            <p className={`item__content ${checked ? 'item__content_checked' : ''}`}>\r\n                                {content}\r\n                            </p>\r\n                            <div className=\"item__controls\">\r\n                                <button className=\"button button__delete item__button\" type=\"button\" \r\n                                    data-int={id} \r\n                                    onClick={handleDelete}\r\n                                >\r\n                                    удалить\r\n                                </button>\r\n                                <button className={`button button__complite item__button ${checked ? 'button__complite_checked' : ''}`} type=\"button\" \r\n                                    data-int={id} \r\n                                    data-complite={checked} \r\n                                    onClick={handleChecked}\r\n                                >\r\n                                    выполненно\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Entries;","D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\Pagination\\Pagination.tsx",["37","38"],"D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\Info\\Info.tsx",[],"D:\\Web_design\\Node_JS\\Ideas\\Todo_GIT\\client\\src\\Utils\\handlePathname.ts",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":64,"column":6,"nodeType":"45","endLine":64,"endColumn":8,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":192,"column":57,"nodeType":"49","messageId":"50","endLine":192,"endColumn":59},{"ruleId":"47","severity":1,"message":"51","line":35,"column":54,"nodeType":"49","messageId":"50","endLine":35,"endColumn":56},{"ruleId":"47","severity":1,"message":"51","line":32,"column":43,"nodeType":"49","messageId":"50","endLine":32,"endColumn":45},{"ruleId":"47","severity":1,"message":"52","line":33,"column":49,"nodeType":"53","messageId":"54","endLine":33,"endColumn":56},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEntries'. Either include it or remove the dependency array.","ArrayExpression",["57"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [getEntries]",{"range":"60","text":"61"},[1826,1828],"[getEntries]"]